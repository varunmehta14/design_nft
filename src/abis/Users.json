{
  "contractName": "Users",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allUsers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "userId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "social",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "repo",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "bio",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "avatarhash",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allUsersById",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "userId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "social",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "repo",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "bio",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "avatarhash",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "nameToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "nameToUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "userId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "social",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "repo",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "bio",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "avatarhash",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userAddressExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "userCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "userEmailExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "userNameExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_social",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_repo",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_avatar",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_oldemail",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_social",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_repo",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_avatar",
          "type": "string"
        }
      ],
      "name": "updateUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"social\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repo\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatarhash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allUsersById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"social\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repo\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatarhash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_social\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_repo\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_avatar\",\"type\":\"string\"}],\"name\":\"createUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"nameToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"nameToUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"social\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repo\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"avatarhash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_oldemail\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_social\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_repo\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_avatar\",\"type\":\"string\"}],\"name\":\"updateUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userAddressExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"userEmailExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"userNameExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/mehta/git/fashion-nft/src/contracts/Users.sol\":\"Users\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/mehta/git/fashion-nft/src/contracts/Users.sol\":{\"keccak256\":\"0xe69b9a70b5d34a2282814af496c770662515ca07c73db672401112a9aaa8b951\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a05dee74b1acdd857b4ab38ebd0b4f59d5000d08c23d8faa74cebe63f3f261b\",\"dweb:/ipfs/QmbaMiCNqCJR5XbWwXedLVrEg3KvtLhGsJoyvYB8Yo6pcG\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613415806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806355d8a9141161008c578063e04b6f0411610066578063e04b6f04146111e2578063e2a04b62146112b3578063edbece3714611370578063f0c37a591461166d576100cf565b806355d8a91414610c74578063ad44e42c14610d45578063cb0e0d7d1461118a576100cf565b806301dadb2b146100d457806302c905841461048257806308d88aad146104dc5780632a2d0c47146105c157806348305c91146106195780634ef8ba101461098d575b600080fd5b610480600480360360c08110156100ea57600080fd5b810190808035906020019064010000000081111561010757600080fd5b82018360208201111561011957600080fd5b8035906020019184600183028401116401000000008311171561013b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561019e57600080fd5b8201836020820111156101b057600080fd5b803590602001918460018302840111640100000000831117156101d257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561023557600080fd5b82018360208201111561024757600080fd5b8035906020019184600183028401116401000000008311171561026957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102cc57600080fd5b8201836020820111156102de57600080fd5b8035906020019184600183028401116401000000008311171561030057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561036357600080fd5b82018360208201111561037557600080fd5b8035906020019184600183028401116401000000008311171561039757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103fa57600080fd5b82018360208201111561040c57600080fd5b8035906020019184600183028401116401000000008311171561042e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061168b565b005b6104c46004803603602081101561049857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611eaa565b60405180821515815260200191505060405180910390f35b610595600480360360208110156104f257600080fd5b810190808035906020019064010000000081111561050f57600080fd5b82018360208201111561052157600080fd5b8035906020019184600183028401116401000000008311171561054357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611eca565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105ed600480360360208110156105d757600080fd5b8101908080359060200190929190505050611f13565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106d26004803603602081101561062f57600080fd5b810190808035906020019064010000000081111561064c57600080fd5b82018360208201111561065e57600080fd5b8035906020019184600183028401116401000000008311171561068057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611f46565b604051808981526020018060200180602001806020018060200180602001806020018873ffffffffffffffffffffffffffffffffffffffff16815260200187810387528e818151815260200191508051906020019080838360005b8381101561074857808201518184015260208101905061072d565b50505050905090810190601f1680156107755780820380516001836020036101000a031916815260200191505b5087810386528d818151815260200191508051906020019080838360005b838110156107ae578082015181840152602081019050610793565b50505050905090810190601f1680156107db5780820380516001836020036101000a031916815260200191505b5087810385528c818151815260200191508051906020019080838360005b838110156108145780820151818401526020810190506107f9565b50505050905090810190601f1680156108415780820380516001836020036101000a031916815260200191505b5087810384528b818151815260200191508051906020019080838360005b8381101561087a57808201518184015260208101905061085f565b50505050905090810190601f1680156108a75780820380516001836020036101000a031916815260200191505b5087810383528a818151815260200191508051906020019080838360005b838110156108e05780820151818401526020810190506108c5565b50505050905090810190601f16801561090d5780820380516001836020036101000a031916815260200191505b50878103825289818151815260200191508051906020019080838360005b8381101561094657808201518184015260208101905061092b565b50505050905090810190601f1680156109735780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b6109b9600480360360208110156109a357600080fd5b8101908080359060200190929190505050612354565b604051808981526020018060200180602001806020018060200180602001806020018873ffffffffffffffffffffffffffffffffffffffff16815260200187810387528e818151815260200191508051906020019080838360005b83811015610a2f578082015181840152602081019050610a14565b50505050905090810190601f168015610a5c5780820380516001836020036101000a031916815260200191505b5087810386528d818151815260200191508051906020019080838360005b83811015610a95578082015181840152602081019050610a7a565b50505050905090810190601f168015610ac25780820380516001836020036101000a031916815260200191505b5087810385528c818151815260200191508051906020019080838360005b83811015610afb578082015181840152602081019050610ae0565b50505050905090810190601f168015610b285780820380516001836020036101000a031916815260200191505b5087810384528b818151815260200191508051906020019080838360005b83811015610b61578082015181840152602081019050610b46565b50505050905090810190601f168015610b8e5780820380516001836020036101000a031916815260200191505b5087810383528a818151815260200191508051906020019080838360005b83811015610bc7578082015181840152602081019050610bac565b50505050905090810190601f168015610bf45780820380516001836020036101000a031916815260200191505b50878103825289818151815260200191508051906020019080838360005b83811015610c2d578082015181840152602081019050610c12565b50505050905090810190601f168015610c5a5780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b610d2d60048036036020811015610c8a57600080fd5b8101908080359060200190640100000000811115610ca757600080fd5b820183602082011115610cb957600080fd5b80359060200191846001830284011164010000000083111715610cdb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061274c565b60405180821515815260200191505060405180910390f35b611188600480360360e0811015610d5b57600080fd5b8101908080359060200190640100000000811115610d7857600080fd5b820183602082011115610d8a57600080fd5b80359060200191846001830284011164010000000083111715610dac57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e0f57600080fd5b820183602082011115610e2157600080fd5b80359060200191846001830284011164010000000083111715610e4357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ea657600080fd5b820183602082011115610eb857600080fd5b80359060200191846001830284011164010000000083111715610eda57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610f3d57600080fd5b820183602082011115610f4f57600080fd5b80359060200191846001830284011164010000000083111715610f7157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610fd457600080fd5b820183602082011115610fe657600080fd5b8035906020019184600183028401116401000000008311171561100857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561106b57600080fd5b82018360208201111561107d57600080fd5b8035906020019184600183028401116401000000008311171561109f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561110257600080fd5b82018360208201111561111457600080fd5b8035906020019184600183028401116401000000008311171561113657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612782565b005b6111cc600480360360208110156111a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e38565b6040518082815260200191505060405180910390f35b61129b600480360360208110156111f857600080fd5b810190808035906020019064010000000081111561121557600080fd5b82018360208201111561122757600080fd5b8035906020019184600183028401116401000000008311171561124957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612e50565b60405180821515815260200191505060405180910390f35b6112f5600480360360208110156112c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e86565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561133557808201518184015260208101905061131a565b50505050905090810190601f1680156113625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6113b26004803603602081101561138657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f36565b604051808981526020018060200180602001806020018060200180602001806020018873ffffffffffffffffffffffffffffffffffffffff16815260200187810387528e818151815260200191508051906020019080838360005b8381101561142857808201518184015260208101905061140d565b50505050905090810190601f1680156114555780820380516001836020036101000a031916815260200191505b5087810386528d818151815260200191508051906020019080838360005b8381101561148e578082015181840152602081019050611473565b50505050905090810190601f1680156114bb5780820380516001836020036101000a031916815260200191505b5087810385528c818151815260200191508051906020019080838360005b838110156114f45780820151818401526020810190506114d9565b50505050905090810190601f1680156115215780820380516001836020036101000a031916815260200191505b5087810384528b818151815260200191508051906020019080838360005b8381101561155a57808201518184015260208101905061153f565b50505050905090810190601f1680156115875780820380516001836020036101000a031916815260200191505b5087810383528a818151815260200191508051906020019080838360005b838110156115c05780820151818401526020810190506115a5565b50505050905090810190601f1680156115ed5780820380516001836020036101000a031916815260200191505b50878103825289818151815260200191508051906020019080838360005b8381101561162657808201518184015260208101905061160b565b50505050905090810190601f1680156116535780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b61167561332e565b6040518082815260200191505060405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156116c557600080fd5b6000808154809291906001019190505550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561172d57600080fd5b6003866040518082805190602001908083835b602083106117635780518252602082019150602081019050602083039250611740565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff16156117ae57600080fd5b6004856040518082805190602001908083835b602083106117e457805182526020820191506020810190506020830392506117c1565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff161561182f57600080fd5b60016003876040518082805190602001908083835b602083106118675780518252602082019150602081019050602083039250611844565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff0219169083151502179055506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004866040518082805190602001908083835b60208310611941578051825260208201915060208101905060208303925061191e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff021916908315150217905550600060405180610100016040528060005481526020018881526020018781526020018681526020018581526020018481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001019080519060200190611a47929190613334565b506040820151816002019080519060200190611a64929190613334565b506060820151816003019080519060200190611a81929190613334565b506080820151816004019080519060200190611a9e929190613334565b5060a0820151816005019080519060200190611abb929190613334565b5060c0820151816006019080519060200190611ad8929190613334565b5060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050806002600080548152602001908152602001600020600082015181600001556020820151816001019080519060200190611b5e929190613334565b506040820151816002019080519060200190611b7b929190613334565b506060820151816003019080519060200190611b98929190613334565b506080820151816004019080519060200190611bb5929190613334565b5060a0820151816005019080519060200190611bd2929190613334565b5060c0820151816006019080519060200190611bef929190613334565b5060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050806009886040518082805190602001908083835b60208310611c715780518252602082019150602081019050602083039250611c4e565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600082015181600001556020820151816001019080519060200190611cca929190613334565b506040820151816002019080519060200190611ce7929190613334565b506060820151816003019080519060200190611d04929190613334565b506080820151816004019080519060200190611d21929190613334565b5060a0820151816005019080519060200190611d3e929190613334565b5060c0820151816006019080519060200190611d5b929190613334565b5060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505033600a60008054815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336008886040518082805190602001908083835b60208310611e305780518252602082019150602081019050602083039250611e0d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b60056020528060005260406000206000915054906101000a900460ff1681565b6008818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600981805160208101820180518482526020830160208501208183528095505050505050600091509050806000015490806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561200e5780601f10611fe35761010080835404028352916020019161200e565b820191906000526020600020905b815481529060010190602001808311611ff157829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120ac5780601f10612081576101008083540402835291602001916120ac565b820191906000526020600020905b81548152906001019060200180831161208f57829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561214a5780601f1061211f5761010080835404028352916020019161214a565b820191906000526020600020905b81548152906001019060200180831161212d57829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121e85780601f106121bd576101008083540402835291602001916121e8565b820191906000526020600020905b8154815290600101906020018083116121cb57829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122865780601f1061225b57610100808354040283529160200191612286565b820191906000526020600020905b81548152906001019060200180831161226957829003601f168201915b505050505090806006018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123245780601f106122f957610100808354040283529160200191612324565b820191906000526020600020905b81548152906001019060200180831161230757829003601f168201915b5050505050908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b6002602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124065780601f106123db57610100808354040283529160200191612406565b820191906000526020600020905b8154815290600101906020018083116123e957829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124a45780601f10612479576101008083540402835291602001916124a4565b820191906000526020600020905b81548152906001019060200180831161248757829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125425780601f1061251757610100808354040283529160200191612542565b820191906000526020600020905b81548152906001019060200180831161252557829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125e05780601f106125b5576101008083540402835291602001916125e0565b820191906000526020600020905b8154815290600101906020018083116125c357829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561267e5780601f106126535761010080835404028352916020019161267e565b820191906000526020600020905b81548152906001019060200180831161266157829003601f168201915b505050505090806006018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561271c5780601f106126f15761010080835404028352916020019161271c565b820191906000526020600020905b8154815290600101906020018083116126ff57829003601f168201915b5050505050908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b6004818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156127bc57600080fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661281257600080fd5b60006004876040518082805190602001908083835b6020831061284a5780518252602082019150602081019050602083039250612827565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff02191690831515021790555060016003886040518082805190602001908083835b602083106128cc57805182526020820191506020810190506020830392506128a9565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff02191690831515021790555060016004866040518082805190602001908083835b6020831061294e578051825260208201915060208101905060208303925061292b565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff0219169083151502179055506000604051806101000160405280600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020018981526020018781526020018681526020018581526020018481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001019080519060200190612a91929190613334565b506040820151816002019080519060200190612aae929190613334565b506060820151816003019080519060200190612acb929190613334565b506080820151816004019080519060200190612ae8929190613334565b5060a0820151816005019080519060200190612b05929190613334565b5060c0820151816006019080519060200190612b22929190613334565b5060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508060026000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548152602001908152602001600020600082015181600001556020820151816001019080519060200190612be6929190613334565b506040820151816002019080519060200190612c03929190613334565b506060820151816003019080519060200190612c20929190613334565b506080820151816004019080519060200190612c3d929190613334565b5060a0820151816005019080519060200190612c5a929190613334565b5060c0820151816006019080519060200190612c77929190613334565b5060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050806009896040518082805190602001908083835b60208310612cf95780518252602082019150602081019050602083039250612cd6565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600082015181600001556020820151816001019080519060200190612d52929190613334565b506040820151816002019080519060200190612d6f929190613334565b506060820151816003019080519060200190612d8c929190613334565b506080820151816004019080519060200190612da9929190613334565b5060a0820151816005019080519060200190612dc6929190613334565b5060c0820151816006019080519060200190612de3929190613334565b5060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050505050505050565b60076020528060005260406000206000915090505481565b6003818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b60066020528060005260406000206000915090508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612f2e5780601f10612f0357610100808354040283529160200191612f2e565b820191906000526020600020905b815481529060010190602001808311612f1157829003601f168201915b505050505081565b6001602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612fe85780601f10612fbd57610100808354040283529160200191612fe8565b820191906000526020600020905b815481529060010190602001808311612fcb57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156130865780601f1061305b57610100808354040283529160200191613086565b820191906000526020600020905b81548152906001019060200180831161306957829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156131245780601f106130f957610100808354040283529160200191613124565b820191906000526020600020905b81548152906001019060200180831161310757829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156131c25780601f10613197576101008083540402835291602001916131c2565b820191906000526020600020905b8154815290600101906020018083116131a557829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156132605780601f1061323557610100808354040283529160200191613260565b820191906000526020600020905b81548152906001019060200180831161324357829003601f168201915b505050505090806006018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156132fe5780601f106132d3576101008083540402835291602001916132fe565b820191906000526020600020905b8154815290600101906020018083116132e157829003601f168201915b5050505050908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b60005481565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261336a57600085556133b1565b82601f1061338357805160ff19168380011785556133b1565b828001600101855582156133b1579182015b828111156133b0578251825591602001919060010190613395565b5b5090506133be91906133c2565b5090565b5b808211156133db5760008160009055506001016133c3565b509056fea2646970667358221220924bb2c55f2c949777a20390423c5326ef9901d05fc92c38bfb74a34b8dde07e64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806355d8a9141161008c578063e04b6f0411610066578063e04b6f04146111e2578063e2a04b62146112b3578063edbece3714611370578063f0c37a591461166d576100cf565b806355d8a91414610c74578063ad44e42c14610d45578063cb0e0d7d1461118a576100cf565b806301dadb2b146100d457806302c905841461048257806308d88aad146104dc5780632a2d0c47146105c157806348305c91146106195780634ef8ba101461098d575b600080fd5b610480600480360360c08110156100ea57600080fd5b810190808035906020019064010000000081111561010757600080fd5b82018360208201111561011957600080fd5b8035906020019184600183028401116401000000008311171561013b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561019e57600080fd5b8201836020820111156101b057600080fd5b803590602001918460018302840111640100000000831117156101d257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561023557600080fd5b82018360208201111561024757600080fd5b8035906020019184600183028401116401000000008311171561026957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102cc57600080fd5b8201836020820111156102de57600080fd5b8035906020019184600183028401116401000000008311171561030057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561036357600080fd5b82018360208201111561037557600080fd5b8035906020019184600183028401116401000000008311171561039757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103fa57600080fd5b82018360208201111561040c57600080fd5b8035906020019184600183028401116401000000008311171561042e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061168b565b005b6104c46004803603602081101561049857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611eaa565b60405180821515815260200191505060405180910390f35b610595600480360360208110156104f257600080fd5b810190808035906020019064010000000081111561050f57600080fd5b82018360208201111561052157600080fd5b8035906020019184600183028401116401000000008311171561054357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611eca565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105ed600480360360208110156105d757600080fd5b8101908080359060200190929190505050611f13565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106d26004803603602081101561062f57600080fd5b810190808035906020019064010000000081111561064c57600080fd5b82018360208201111561065e57600080fd5b8035906020019184600183028401116401000000008311171561068057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611f46565b604051808981526020018060200180602001806020018060200180602001806020018873ffffffffffffffffffffffffffffffffffffffff16815260200187810387528e818151815260200191508051906020019080838360005b8381101561074857808201518184015260208101905061072d565b50505050905090810190601f1680156107755780820380516001836020036101000a031916815260200191505b5087810386528d818151815260200191508051906020019080838360005b838110156107ae578082015181840152602081019050610793565b50505050905090810190601f1680156107db5780820380516001836020036101000a031916815260200191505b5087810385528c818151815260200191508051906020019080838360005b838110156108145780820151818401526020810190506107f9565b50505050905090810190601f1680156108415780820380516001836020036101000a031916815260200191505b5087810384528b818151815260200191508051906020019080838360005b8381101561087a57808201518184015260208101905061085f565b50505050905090810190601f1680156108a75780820380516001836020036101000a031916815260200191505b5087810383528a818151815260200191508051906020019080838360005b838110156108e05780820151818401526020810190506108c5565b50505050905090810190601f16801561090d5780820380516001836020036101000a031916815260200191505b50878103825289818151815260200191508051906020019080838360005b8381101561094657808201518184015260208101905061092b565b50505050905090810190601f1680156109735780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b6109b9600480360360208110156109a357600080fd5b8101908080359060200190929190505050612354565b604051808981526020018060200180602001806020018060200180602001806020018873ffffffffffffffffffffffffffffffffffffffff16815260200187810387528e818151815260200191508051906020019080838360005b83811015610a2f578082015181840152602081019050610a14565b50505050905090810190601f168015610a5c5780820380516001836020036101000a031916815260200191505b5087810386528d818151815260200191508051906020019080838360005b83811015610a95578082015181840152602081019050610a7a565b50505050905090810190601f168015610ac25780820380516001836020036101000a031916815260200191505b5087810385528c818151815260200191508051906020019080838360005b83811015610afb578082015181840152602081019050610ae0565b50505050905090810190601f168015610b285780820380516001836020036101000a031916815260200191505b5087810384528b818151815260200191508051906020019080838360005b83811015610b61578082015181840152602081019050610b46565b50505050905090810190601f168015610b8e5780820380516001836020036101000a031916815260200191505b5087810383528a818151815260200191508051906020019080838360005b83811015610bc7578082015181840152602081019050610bac565b50505050905090810190601f168015610bf45780820380516001836020036101000a031916815260200191505b50878103825289818151815260200191508051906020019080838360005b83811015610c2d578082015181840152602081019050610c12565b50505050905090810190601f168015610c5a5780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b610d2d60048036036020811015610c8a57600080fd5b8101908080359060200190640100000000811115610ca757600080fd5b820183602082011115610cb957600080fd5b80359060200191846001830284011164010000000083111715610cdb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061274c565b60405180821515815260200191505060405180910390f35b611188600480360360e0811015610d5b57600080fd5b8101908080359060200190640100000000811115610d7857600080fd5b820183602082011115610d8a57600080fd5b80359060200191846001830284011164010000000083111715610dac57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e0f57600080fd5b820183602082011115610e2157600080fd5b80359060200191846001830284011164010000000083111715610e4357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ea657600080fd5b820183602082011115610eb857600080fd5b80359060200191846001830284011164010000000083111715610eda57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610f3d57600080fd5b820183602082011115610f4f57600080fd5b80359060200191846001830284011164010000000083111715610f7157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610fd457600080fd5b820183602082011115610fe657600080fd5b8035906020019184600183028401116401000000008311171561100857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561106b57600080fd5b82018360208201111561107d57600080fd5b8035906020019184600183028401116401000000008311171561109f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561110257600080fd5b82018360208201111561111457600080fd5b8035906020019184600183028401116401000000008311171561113657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612782565b005b6111cc600480360360208110156111a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e38565b6040518082815260200191505060405180910390f35b61129b600480360360208110156111f857600080fd5b810190808035906020019064010000000081111561121557600080fd5b82018360208201111561122757600080fd5b8035906020019184600183028401116401000000008311171561124957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612e50565b60405180821515815260200191505060405180910390f35b6112f5600480360360208110156112c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e86565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561133557808201518184015260208101905061131a565b50505050905090810190601f1680156113625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6113b26004803603602081101561138657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f36565b604051808981526020018060200180602001806020018060200180602001806020018873ffffffffffffffffffffffffffffffffffffffff16815260200187810387528e818151815260200191508051906020019080838360005b8381101561142857808201518184015260208101905061140d565b50505050905090810190601f1680156114555780820380516001836020036101000a031916815260200191505b5087810386528d818151815260200191508051906020019080838360005b8381101561148e578082015181840152602081019050611473565b50505050905090810190601f1680156114bb5780820380516001836020036101000a031916815260200191505b5087810385528c818151815260200191508051906020019080838360005b838110156114f45780820151818401526020810190506114d9565b50505050905090810190601f1680156115215780820380516001836020036101000a031916815260200191505b5087810384528b818151815260200191508051906020019080838360005b8381101561155a57808201518184015260208101905061153f565b50505050905090810190601f1680156115875780820380516001836020036101000a031916815260200191505b5087810383528a818151815260200191508051906020019080838360005b838110156115c05780820151818401526020810190506115a5565b50505050905090810190601f1680156115ed5780820380516001836020036101000a031916815260200191505b50878103825289818151815260200191508051906020019080838360005b8381101561162657808201518184015260208101905061160b565b50505050905090810190601f1680156116535780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b61167561332e565b6040518082815260200191505060405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156116c557600080fd5b6000808154809291906001019190505550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561172d57600080fd5b6003866040518082805190602001908083835b602083106117635780518252602082019150602081019050602083039250611740565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff16156117ae57600080fd5b6004856040518082805190602001908083835b602083106117e457805182526020820191506020810190506020830392506117c1565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff161561182f57600080fd5b60016003876040518082805190602001908083835b602083106118675780518252602082019150602081019050602083039250611844565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff0219169083151502179055506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004866040518082805190602001908083835b60208310611941578051825260208201915060208101905060208303925061191e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff021916908315150217905550600060405180610100016040528060005481526020018881526020018781526020018681526020018581526020018481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001019080519060200190611a47929190613334565b506040820151816002019080519060200190611a64929190613334565b506060820151816003019080519060200190611a81929190613334565b506080820151816004019080519060200190611a9e929190613334565b5060a0820151816005019080519060200190611abb929190613334565b5060c0820151816006019080519060200190611ad8929190613334565b5060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050806002600080548152602001908152602001600020600082015181600001556020820151816001019080519060200190611b5e929190613334565b506040820151816002019080519060200190611b7b929190613334565b506060820151816003019080519060200190611b98929190613334565b506080820151816004019080519060200190611bb5929190613334565b5060a0820151816005019080519060200190611bd2929190613334565b5060c0820151816006019080519060200190611bef929190613334565b5060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050806009886040518082805190602001908083835b60208310611c715780518252602082019150602081019050602083039250611c4e565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600082015181600001556020820151816001019080519060200190611cca929190613334565b506040820151816002019080519060200190611ce7929190613334565b506060820151816003019080519060200190611d04929190613334565b506080820151816004019080519060200190611d21929190613334565b5060a0820151816005019080519060200190611d3e929190613334565b5060c0820151816006019080519060200190611d5b929190613334565b5060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505033600a60008054815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336008886040518082805190602001908083835b60208310611e305780518252602082019150602081019050602083039250611e0d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b60056020528060005260406000206000915054906101000a900460ff1681565b6008818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600981805160208101820180518482526020830160208501208183528095505050505050600091509050806000015490806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561200e5780601f10611fe35761010080835404028352916020019161200e565b820191906000526020600020905b815481529060010190602001808311611ff157829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120ac5780601f10612081576101008083540402835291602001916120ac565b820191906000526020600020905b81548152906001019060200180831161208f57829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561214a5780601f1061211f5761010080835404028352916020019161214a565b820191906000526020600020905b81548152906001019060200180831161212d57829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121e85780601f106121bd576101008083540402835291602001916121e8565b820191906000526020600020905b8154815290600101906020018083116121cb57829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122865780601f1061225b57610100808354040283529160200191612286565b820191906000526020600020905b81548152906001019060200180831161226957829003601f168201915b505050505090806006018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123245780601f106122f957610100808354040283529160200191612324565b820191906000526020600020905b81548152906001019060200180831161230757829003601f168201915b5050505050908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b6002602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124065780601f106123db57610100808354040283529160200191612406565b820191906000526020600020905b8154815290600101906020018083116123e957829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124a45780601f10612479576101008083540402835291602001916124a4565b820191906000526020600020905b81548152906001019060200180831161248757829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125425780601f1061251757610100808354040283529160200191612542565b820191906000526020600020905b81548152906001019060200180831161252557829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125e05780601f106125b5576101008083540402835291602001916125e0565b820191906000526020600020905b8154815290600101906020018083116125c357829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561267e5780601f106126535761010080835404028352916020019161267e565b820191906000526020600020905b81548152906001019060200180831161266157829003601f168201915b505050505090806006018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561271c5780601f106126f15761010080835404028352916020019161271c565b820191906000526020600020905b8154815290600101906020018083116126ff57829003601f168201915b5050505050908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b6004818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156127bc57600080fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661281257600080fd5b60006004876040518082805190602001908083835b6020831061284a5780518252602082019150602081019050602083039250612827565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff02191690831515021790555060016003886040518082805190602001908083835b602083106128cc57805182526020820191506020810190506020830392506128a9565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff02191690831515021790555060016004866040518082805190602001908083835b6020831061294e578051825260208201915060208101905060208303925061292b565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff0219169083151502179055506000604051806101000160405280600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020018981526020018781526020018681526020018581526020018481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001019080519060200190612a91929190613334565b506040820151816002019080519060200190612aae929190613334565b506060820151816003019080519060200190612acb929190613334565b506080820151816004019080519060200190612ae8929190613334565b5060a0820151816005019080519060200190612b05929190613334565b5060c0820151816006019080519060200190612b22929190613334565b5060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508060026000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548152602001908152602001600020600082015181600001556020820151816001019080519060200190612be6929190613334565b506040820151816002019080519060200190612c03929190613334565b506060820151816003019080519060200190612c20929190613334565b506080820151816004019080519060200190612c3d929190613334565b5060a0820151816005019080519060200190612c5a929190613334565b5060c0820151816006019080519060200190612c77929190613334565b5060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050806009896040518082805190602001908083835b60208310612cf95780518252602082019150602081019050602083039250612cd6565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600082015181600001556020820151816001019080519060200190612d52929190613334565b506040820151816002019080519060200190612d6f929190613334565b506060820151816003019080519060200190612d8c929190613334565b506080820151816004019080519060200190612da9929190613334565b5060a0820151816005019080519060200190612dc6929190613334565b5060c0820151816006019080519060200190612de3929190613334565b5060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050505050505050565b60076020528060005260406000206000915090505481565b6003818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900460ff1681565b60066020528060005260406000206000915090508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612f2e5780601f10612f0357610100808354040283529160200191612f2e565b820191906000526020600020905b815481529060010190602001808311612f1157829003601f168201915b505050505081565b6001602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612fe85780601f10612fbd57610100808354040283529160200191612fe8565b820191906000526020600020905b815481529060010190602001808311612fcb57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156130865780601f1061305b57610100808354040283529160200191613086565b820191906000526020600020905b81548152906001019060200180831161306957829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156131245780601f106130f957610100808354040283529160200191613124565b820191906000526020600020905b81548152906001019060200180831161310757829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156131c25780601f10613197576101008083540402835291602001916131c2565b820191906000526020600020905b8154815290600101906020018083116131a557829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156132605780601f1061323557610100808354040283529160200191613260565b820191906000526020600020905b81548152906001019060200180831161324357829003601f168201915b505050505090806006018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156132fe5780601f106132d3576101008083540402835291602001916132fe565b820191906000526020600020905b8154815290600101906020018083116132e157829003601f168201915b5050505050908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b60005481565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261336a57600085556133b1565b82601f1061338357805160ff19168380011785556133b1565b828001600101855582156133b1579182015b828111156133b0578251825591602001919060010190613395565b5b5090506133be91906133c2565b5090565b5b808211156133db5760008160009055506001016133c3565b509056fea2646970667358221220924bb2c55f2c949777a20390423c5326ef9901d05fc92c38bfb74a34b8dde07e64736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "71:4256:0:-:0;;;1118:62;;;;;;;;;;71:4256;;;;;;",
  "deployedSourceMapi;:::-;;701:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;930:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1068:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1001:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::iiii;:::-;;860:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;537:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;784:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;413:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;120:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1208:1300;1470:1;1448:24;;:10;:24;;;;1440:33;;;;;;1512:11;;:14;;;;;;;;;;;;;1579:17;:29;1597:10;1579:29;;;;;;;;;;;;;;;;;;;;;;;;;1578:30;1570:39;;;;;;1678:14;1693:9;1678:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1677:26;1669:35;;;;;;1771:15;1787:6;1771:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:24;1762:33;;;;;;1867:4;1841:14;1856:9;1841:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1950:4;1920:17;:29;1938:10;1920:29;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;2021:4;1997:15;2013:6;1997:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2089:19;2109:134;;;;;;;;2121:11;;2109:134;;;;2140:9;2109:134;;;;2157:6;2109:134;;;;2171:7;2109:134;;;;2186:5;2109:134;;;;2199:4;2109:134;;;;2211:7;2109:134;;;;2226:10;2109:134;;;;;2089:154;;2332:7;2309:8;:20;2318:10;2309:20;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2373:7;2346:12;:25;2359:11;;2346:25;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2409:7;2387:10;2398:9;2387:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2448:10;2423:11;:24;2435:11;;2423:24;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2490:10;2465:13;2479:9;2465:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;1208:1300;;;;;;;:::o;701:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;930:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1068:41::-;;;;;;;;;;;;;;;;;;;;;;:::ooo;615:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2531:1788::-;2816:1;2794:24;;:10;:24;;;;2786:33;;;;;;2862:17;:29;2880:10;2862:29;;;;;;;;;;;;;;;;;;;;;;;;;2854:38;;;;;;3775:5;3748:15;3764:9;3748:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;3813:4;3787:14;3802:9;3787:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;3884:4;3860:15;3876:6;3860:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;3952:19;3972:146;;;;;;;;3984:11;:23;3996:10;3984:23;;;;;;;;;;;;;;;;3972:146;;;;4015:9;3972:146;;;;4032:6;3972:146;;;;4046:7;3972:146;;;;4061:5;3972:146;;;;4074:4;3972:146;;;;4086:7;3972:146;;;;4101:10;3972:146;;;;;3952:166;;4208:7;4185:8;:20;4194:10;4185:20;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4268:7;4229:12;:37;4242:11;:23;4254:10;4242:23;;;;;;;;;;;;;;;;4229:37;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4304:7;4282:10;4293:9;4282:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2531:1788;;;;;;;;:::o;860:40::-;;;;;;;;;;;;;;;;;:::o;537:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;784:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::oo;120:26::-;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.21 <0.8.0;\r\n\r\n\r\ncontract Users{\r\n\r\n  // total number of users\r\n  uint256 public userCounter;\r\n  \r\n  //define user struct\r\n  struct User{\r\n    uint userId;\r\n    string userName;\r\n    string email;\r\n    string social;\r\n    string repo;\r\n    string bio;\r\n    string avatarhash;\r\n    address userAddress;\r\n  }\r\n  \r\n  // map cryptoboy's token id to crypto boy\r\n  mapping(address => User) public allUsers;\r\n  mapping(uint => User) public allUsersById;\r\n  // check if token name exists\r\n  mapping(string => bool) public userNameExists;\r\n  // check if image exists\r\n  mapping(string => bool) public userEmailExists;\r\n  // check if user Address exists\r\n  mapping(address => bool) public userAddressExists;\r\n  //map address to username\r\n  mapping(address=>string)public addressToName;\r\n  //map address to userId\r\n  mapping(address=>uint)public addressToId;\r\n  //map name to address\r\n  mapping(string=>address)public nameToAddress;\r\n  //map name to user\r\n  mapping(string=>User) public nameToUser;\r\n  //map id to address\r\n  mapping(uint=>address) public idToAddress;\r\n  \r\n  constructor(){\r\n   // userAddressExists[msg.sender]=true;\r\n  }\r\n\r\n \r\n  //create a user\r\n  function createUser(string memory _userName,string memory _email,string memory _social,string memory _repo,string memory _bio,string memory _avatar)external{\r\n    // check if thic fucntion caller is not an zero address account\r\n    require(msg.sender != address(0));\r\n    \r\n    // increment counter\r\n    userCounter ++;\r\n    // check if user already exists\r\n    require(!userAddressExists[msg.sender]); \r\n    // check if the userName already exists or not\r\n    require(!userNameExists[_userName]);\r\n\r\n    // check if the email already exists or not\r\n    require(!userEmailExists[_email]);\r\n    // make passed userName as exists\r\n    userNameExists[_userName]=true;\r\n    // make passed userAddress as exists\r\n    userAddressExists[msg.sender]=true;\r\n    // make passed email as exists\r\n    userEmailExists[_email]=true;\r\n    // creat a new user (struct) and pass in new values\r\n    User memory newUser=User(\r\n     userCounter,\r\n     _userName,\r\n     _email,\r\n     _social,\r\n     _repo,\r\n     _bio,\r\n     _avatar,\r\n     msg.sender\r\n    );\r\n    // add the address and it's user to all users mapping\r\n    allUsers[msg.sender] = newUser;\r\n    allUsersById[userCounter] =newUser;\r\n    nameToUser[_userName]=newUser;\r\n    idToAddress[userCounter]=msg.sender;\r\n    nameToAddress[_userName]=msg.sender;\r\n\r\n  }\r\n\r\n  //update User\r\n  function updateUser(string memory _userName,string memory _oldemail,string memory _email,string memory _social,string memory _repo,string memory _bio,string memory _avatar)external{\r\n   // check if thic fucntion caller is not an zero address account\r\n    require(msg.sender != address(0));\r\n    // user already exists\r\n    require(userAddressExists[msg.sender]); \r\n    // check if the userName already exists or not\r\n    // if(keccak256(abi.encodePacked((addressToName[msg.sender])))==keccak256(abi.encodePacked((_userName)))){\r\n      \r\n    //   emit SameUserName(_userName);\r\n    //   userNameExists[_userName]=true;\r\n    // // make passed email as exists\r\n    // userEmailExists[_email]=true;\r\n    // User memory newUser=User(\r\n    //  addressToId[msg.sender],\r\n    //  _userName,\r\n    //  _email,\r\n    //  _social,\r\n    //  _repo,\r\n    //  _bio,\r\n    //  _avatar,\r\n    //  msg.sender\r\n    // );\r\n    //  // add the address and it's user to all users mapping\r\n    // allUsers[msg.sender] = newUser;\r\n    // }\r\n    // else{\r\n        \r\n    //require(!userNameExists[_userName]);\r\n    // check if the email already exists or not\r\n    //require(!userEmailExists[_email]);\r\n    // // make passed userName as exists\r\n    userEmailExists[_oldemail]=false;\r\n    userNameExists[_userName]=true;\r\n    // make passed email as exists\r\n    userEmailExists[_email]=true;\r\n    // creat a new user (struct) and pass in new values\r\n    User memory newUser=User(\r\n     addressToId[msg.sender],\r\n     _userName,\r\n     _email,\r\n     _social,\r\n     _repo,\r\n     _bio,\r\n     _avatar,\r\n     msg.sender\r\n    );\r\n     // add the address and it's user to all users mapping\r\n    allUsers[msg.sender] = newUser;\r\n     \r\n    allUsersById[addressToId[msg.sender]] =newUser;\r\n    nameToUser[_userName]=newUser;\r\n    }\r\n   \r\n}\r\n\r\n\r\n",
  "sourcePath": "C:/Users/mehta/git/fashion-nft/src/contracts/Users.sol",
  "ast": {
    "absolutePath": "/C/Users/mehta/git/fashion-nft/src/contracts/Users.sol",
    "exportedSymbols": {
      "Users": [
        274
      ]
    },
    "id": 275,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 274,
        "linearizedBaseContracts": [
          274
        ],
        "name": "Users",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f0c37a59",
            "id": 3,
            "mutability": "mutable",
            "name": "userCounter",
            "nodeType": "VariableDeclaration",
            "scope": 274,
            "src": "120:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "120:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Users.User",
            "id": 20,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "userId",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "197:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "197:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "userName",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "215:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 6,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "215:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "email",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "237:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 8,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "237:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "social",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "256:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 10,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "256:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "repo",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "276:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 12,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "276:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "bio",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "294:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 14,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "294:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "avatarhash",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "311:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 16,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "311:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "userAddress",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "335:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 18,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "335:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 274,
            "src": "179:181:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "edbece37",
            "id": 24,
            "mutability": "mutable",
            "name": "allUsers",
            "nodeType": "VariableDeclaration",
            "scope": 274,
            "src": "413:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$20_storage_$",
              "typeString": "mapping(address => struct Users.User)"
            },
            "typeName": {
              "id": 23,
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "421:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "413:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$20_storage_$",
                "typeString": "mapping(address => struct Users.User)"
              },
              "valueType": {
                "id": 22,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 20,
                "src": "432:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$20_storage_ptr",
                  "typeString": "struct Users.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4ef8ba10",
            "id": 28,
            "mutability": "mutable",
            "name": "allUsersById",
            "nodeType": "VariableDeclaration",
            "scope": 274,
            "src": "458:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$20_storage_$",
              "typeString": "mapping(uint256 => struct Users.User)"
            },
            "typeName": {
              "id": 27,
              "keyType": {
                "id": 25,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "466:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "458:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$20_storage_$",
                "typeString": "mapping(uint256 => struct Users.User)"
              },
              "valueType": {
                "id": 26,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 20,
                "src": "474:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$20_storage_ptr",
                  "typeString": "struct Users.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e04b6f04",
            "id": 32,
            "mutability": "mutable",
            "name": "userNameExists",
            "nodeType": "VariableDeclaration",
            "scope": 274,
            "src": "537:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 31,
              "keyType": {
                "id": 29,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "545:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "537:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 30,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "555:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "55d8a914",
            "id": 36,
            "mutability": "mutable",
            "name": "userEmailExists",
            "nodeType": "VariableDeclaration",
            "scope": 274,
            "src": "615:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 35,
              "keyType": {
                "id": 33,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "623:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "615:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 34,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "633:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "02c90584",
            "id": 40,
            "mutability": "mutable",
            "name": "userAddressExists",
            "nodeType": "VariableDeclaration",
            "scope": 274,
            "src": "701:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 39,
              "keyType": {
                "id": 37,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "709:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "701:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 38,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "720:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e2a04b62",
            "id": 44,
            "mutability": "mutable",
            "name": "addressToName",
            "nodeType": "VariableDeclaration",
            "scope": 274,
            "src": "784:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 41,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "792:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "784:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 42,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "801:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cb0e0d7d",
            "id": 48,
            "mutability": "mutable",
            "name": "addressToId",
            "nodeType": "VariableDeclaration",
            "scope": 274,
            "src": "860:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 45,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "868:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "860:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 46,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "877:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08d88aad",
            "id": 52,
            "mutability": "mutable",
            "name": "nameToAddress",
            "nodeType": "VariableDeclaration",
            "scope": 274,
            "src": "930:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 51,
              "keyType": {
                "id": 49,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "938:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "930:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 50,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "946:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "48305c91",
            "id": 56,
            "mutability": "mutable",
            "name": "nameToUser",
            "nodeType": "VariableDeclaration",
            "scope": 274,
            "src": "1001:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$20_storage_$",
              "typeString": "mapping(string => struct Users.User)"
            },
            "typeName": {
              "id": 55,
              "keyType": {
                "id": 53,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1009:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1001:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$20_storage_$",
                "typeString": "mapping(string => struct Users.User)"
              },
              "valueType": {
                "id": 54,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 20,
                "src": "1017:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$20_storage_ptr",
                  "typeString": "struct Users.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2a2d0c47",
            "id": 60,
            "mutability": "mutable",
            "name": "idToAddress",
            "nodeType": "VariableDeclaration",
            "scope": 274,
            "src": "1068:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 59,
              "keyType": {
                "id": 57,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1076:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1068:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 58,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1082:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "1131:49:0",
              "statements": []
            },
            "id": 64,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1129:2:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1131:0:0"
            },
            "scope": 274,
            "src": "1118:62:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "1364:1144:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 80,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1448:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1448:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 84,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1470:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1462:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 82,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1462:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1462:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1448:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1440:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1440:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "1440:33:0"
                },
                {
                  "expression": {
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1512:14:0",
                    "subExpression": {
                      "id": 89,
                      "name": "userCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1512:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:14:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1578:30:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 93,
                            "name": "userAddressExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "1579:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 96,
                          "indexExpression": {
                            "expression": {
                              "id": 94,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1597:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1597:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1579:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1570:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1677:26:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 101,
                            "name": "userNameExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1678:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 103,
                          "indexExpression": {
                            "id": 102,
                            "name": "_userName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "1693:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1678:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1669:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1669:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1770:24:0",
                        "subExpression": {
                          "baseExpression": {
                            "id": 108,
                            "name": "userEmailExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1771:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 110,
                          "indexExpression": {
                            "id": 109,
                            "name": "_email",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "1787:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1771:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1762:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1762:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1762:33:0"
                },
                {
                  "expression": {
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 114,
                        "name": "userNameExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1841:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 116,
                      "indexExpression": {
                        "id": 115,
                        "name": "_userName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "1856:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1841:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1867:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1841:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1841:30:0"
                },
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 120,
                        "name": "userAddressExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "1920:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 123,
                      "indexExpression": {
                        "expression": {
                          "id": 121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1938:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1938:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1920:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1950:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1920:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1920:34:0"
                },
                {
                  "expression": {
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 127,
                        "name": "userEmailExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1997:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 129,
                      "indexExpression": {
                        "id": 128,
                        "name": "_email",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "2013:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1997:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2021:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1997:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1997:28:0"
                },
                {
                  "assignments": [
                    134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 134,
                      "mutability": "mutable",
                      "name": "newUser",
                      "nodeType": "VariableDeclaration",
                      "scope": 180,
                      "src": "2089:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$20_memory_ptr",
                        "typeString": "struct Users.User"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 20,
                        "src": "2089:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$20_storage_ptr",
                          "typeString": "struct Users.User"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 146,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 136,
                        "name": "userCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "2121:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 137,
                        "name": "_userName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "2140:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 138,
                        "name": "_email",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "2157:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 139,
                        "name": "_social",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "2171:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 140,
                        "name": "_repo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "2186:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 141,
                        "name": "_bio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "2199:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 142,
                        "name": "_avatar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "2211:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 143,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2226:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2226:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 135,
                      "name": "User",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2109:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_User_$20_storage_ptr_$",
                        "typeString": "type(struct Users.User storage pointer)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:134:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$20_memory_ptr",
                      "typeString": "struct Users.User memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2089:154:0"
                },
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 147,
                        "name": "allUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "2309:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$20_storage_$",
                          "typeString": "mapping(address => struct Users.User storage ref)"
                        }
                      },
                      "id": 150,
                      "indexExpression": {
                        "expression": {
                          "id": 148,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2318:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2318:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2309:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$20_storage",
                        "typeString": "struct Users.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 151,
                      "name": "newUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2332:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$20_memory_ptr",
                        "typeString": "struct Users.User memory"
                      }
                    },
                    "src": "2309:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$20_storage",
                      "typeString": "struct Users.User storage ref"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:30:0"
                },
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 154,
                        "name": "allUsersById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2346:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$20_storage_$",
                          "typeString": "mapping(uint256 => struct Users.User storage ref)"
                        }
                      },
                      "id": 156,
                      "indexExpression": {
                        "id": 155,
                        "name": "userCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "2359:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2346:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$20_storage",
                        "typeString": "struct Users.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 157,
                      "name": "newUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2373:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$20_memory_ptr",
                        "typeString": "struct Users.User memory"
                      }
                    },
                    "src": "2346:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$20_storage",
                      "typeString": "struct Users.User storage ref"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2346:34:0"
                },
                {
                  "expression": {
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 160,
                        "name": "nameToUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "2387:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$20_storage_$",
                          "typeString": "mapping(string memory => struct Users.User storage ref)"
                        }
                      },
                      "id": 162,
                      "indexExpression": {
                        "id": 161,
                        "name": "_userName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "2398:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2387:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$20_storage",
                        "typeString": "struct Users.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 163,
                      "name": "newUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2409:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$20_memory_ptr",
                        "typeString": "struct Users.User memory"
                      }
                    },
                    "src": "2387:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$20_storage",
                      "typeString": "struct Users.User storage ref"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2387:29:0"
                },
                {
                  "expression": {
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 166,
                        "name": "idToAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "2423:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 168,
                      "indexExpression": {
                        "id": 167,
                        "name": "userCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "2435:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2423:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 169,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2448:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2448:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2423:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "2423:35:0"
                },
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 173,
                        "name": "nameToAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "2465:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 175,
                      "indexExpression": {
                        "id": 174,
                        "name": "_userName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "2479:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2465:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 176,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2490:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2490:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2465:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "2465:35:0"
                }
              ]
            },
            "functionSelector": "01dadb2b",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "_userName",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1228:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "_email",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1252:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "_social",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1273:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_repo",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1295:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1295:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_bio",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1315:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_avatar",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1334:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1227:129:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1364:0:0"
            },
            "scope": 274,
            "src": "1208:1300:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "2711:1608:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 199,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2794:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2794:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2816:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2808:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 201,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2808:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2808:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2794:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2786:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2786:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:33:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 209,
                          "name": "userAddressExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "2862:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 212,
                        "indexExpression": {
                          "expression": {
                            "id": 210,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2880:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2880:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2862:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2854:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2854:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "2854:38:0"
                },
                {
                  "expression": {
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 215,
                        "name": "userEmailExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "3748:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 217,
                      "indexExpression": {
                        "id": 216,
                        "name": "_oldemail",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "3764:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3748:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3775:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3748:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "3748:32:0"
                },
                {
                  "expression": {
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 221,
                        "name": "userNameExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "3787:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 223,
                      "indexExpression": {
                        "id": 222,
                        "name": "_userName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "3802:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3787:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3813:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3787:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "3787:30:0"
                },
                {
                  "expression": {
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 227,
                        "name": "userEmailExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "3860:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 229,
                      "indexExpression": {
                        "id": 228,
                        "name": "_email",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "3876:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3860:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3884:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3860:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3860:28:0"
                },
                {
                  "assignments": [
                    234
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 234,
                      "mutability": "mutable",
                      "name": "newUser",
                      "nodeType": "VariableDeclaration",
                      "scope": 272,
                      "src": "3952:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$20_memory_ptr",
                        "typeString": "struct Users.User"
                      },
                      "typeName": {
                        "id": 233,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 20,
                        "src": "3952:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$20_storage_ptr",
                          "typeString": "struct Users.User"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 249,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 236,
                          "name": "addressToId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "3984:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 239,
                        "indexExpression": {
                          "expression": {
                            "id": 237,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3996:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3996:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3984:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 240,
                        "name": "_userName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "4015:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 241,
                        "name": "_email",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "4032:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 242,
                        "name": "_social",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "4046:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 243,
                        "name": "_repo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "4061:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 244,
                        "name": "_bio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "4074:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 245,
                        "name": "_avatar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "4086:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 246,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4101:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4101:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 235,
                      "name": "User",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "3972:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_User_$20_storage_ptr_$",
                        "typeString": "type(struct Users.User storage pointer)"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3972:146:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$20_memory_ptr",
                      "typeString": "struct Users.User memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3952:166:0"
                },
                {
                  "expression": {
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 250,
                        "name": "allUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "4185:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$20_storage_$",
                          "typeString": "mapping(address => struct Users.User storage ref)"
                        }
                      },
                      "id": 253,
                      "indexExpression": {
                        "expression": {
                          "id": 251,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4194:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4194:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4185:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$20_storage",
                        "typeString": "struct Users.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 254,
                      "name": "newUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "4208:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$20_memory_ptr",
                        "typeString": "struct Users.User memory"
                      }
                    },
                    "src": "4185:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$20_storage",
                      "typeString": "struct Users.User storage ref"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "4185:30:0"
                },
                {
                  "expression": {
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 257,
                        "name": "allUsersById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "4229:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$20_storage_$",
                          "typeString": "mapping(uint256 => struct Users.User storage ref)"
                        }
                      },
                      "id": 262,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 258,
                          "name": "addressToId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "4242:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 261,
                        "indexExpression": {
                          "expression": {
                            "id": 259,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4254:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4254:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4242:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4229:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$20_storage",
                        "typeString": "struct Users.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 263,
                      "name": "newUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "4268:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$20_memory_ptr",
                        "typeString": "struct Users.User memory"
                      }
                    },
                    "src": "4229:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$20_storage",
                      "typeString": "struct Users.User storage ref"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "4229:46:0"
                },
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 266,
                        "name": "nameToUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "4282:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$20_storage_$",
                          "typeString": "mapping(string memory => struct Users.User storage ref)"
                        }
                      },
                      "id": 268,
                      "indexExpression": {
                        "id": 267,
                        "name": "_userName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "4293:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4282:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$20_storage",
                        "typeString": "struct Users.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 269,
                      "name": "newUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "4304:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$20_memory_ptr",
                        "typeString": "struct Users.User memory"
                      }
                    },
                    "src": "4282:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$20_storage",
                      "typeString": "struct Users.User storage ref"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "4282:29:0"
                }
              ]
            },
            "functionSelector": "ad44e42c",
            "id": 273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "_userName",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2551:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2551:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "_oldemail",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2575:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2575:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "_email",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2599:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2599:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "_social",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2620:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2620:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "_repo",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2642:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "_bio",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2662:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2662:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "_avatar",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2681:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2681:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2550:153:0"
            },
            "returnParameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2711:0:0"
            },
            "scope": 274,
            "src": "2531:1788:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 275,
        "src": "71:4256:0"
      }
    ],
    "src": "33:4300:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/mehta/git/fashion-nft/src/contracts/Users.sol",
      "exportedSymbols": {
        "Users": [
          274
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "33:32:0"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            274
          ],
          "name": "Users",
          "scope": 275
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "functionSelector": "f0c37a59",
              "mutability": "mutable",
              "name": "userCounter",
              "scope": 274,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 2,
                "name": "ElementaryTypeName",
                "src": "120:7:0"
              }
            ],
            "id": 3,
            "name": "VariableDeclaration",
            "src": "120:26:0"
          },
          {
            "attributes": {
              "canonicalName": "Users.User",
              "name": "User",
              "scope": 274,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "userId",
                  "scope": 20,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 4,
                    "name": "ElementaryTypeName",
                    "src": "197:4:0"
                  }
                ],
                "id": 5,
                "name": "VariableDeclaration",
                "src": "197:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "userName",
                  "scope": 20,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 6,
                    "name": "ElementaryTypeName",
                    "src": "215:6:0"
                  }
                ],
                "id": 7,
                "name": "VariableDeclaration",
                "src": "215:15:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "email",
                  "scope": 20,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 8,
                    "name": "ElementaryTypeName",
                    "src": "237:6:0"
                  }
                ],
                "id": 9,
                "name": "VariableDeclaration",
                "src": "237:12:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "social",
                  "scope": 20,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 10,
                    "name": "ElementaryTypeName",
                    "src": "256:6:0"
                  }
                ],
                "id": 11,
                "name": "VariableDeclaration",
                "src": "256:13:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "repo",
                  "scope": 20,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 12,
                    "name": "ElementaryTypeName",
                    "src": "276:6:0"
                  }
                ],
                "id": 13,
                "name": "VariableDeclaration",
                "src": "276:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "bio",
                  "scope": 20,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 14,
                    "name": "ElementaryTypeName",
                    "src": "294:6:0"
                  }
                ],
                "id": 15,
                "name": "VariableDeclaration",
                "src": "294:10:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "avatarhash",
                  "scope": 20,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 16,
                    "name": "ElementaryTypeName",
                    "src": "311:6:0"
                  }
                ],
                "id": 17,
                "name": "VariableDeclaration",
                "src": "311:17:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "scope": 20,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 18,
                    "name": "ElementaryTypeName",
                    "src": "335:7:0"
                  }
                ],
                "id": 19,
                "name": "VariableDeclaration",
                "src": "335:19:0"
              }
            ],
            "id": 20,
            "name": "StructDefinition",
            "src": "179:181:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "edbece37",
              "mutability": "mutable",
              "name": "allUsers",
              "scope": 274,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct Users.User)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct Users.User)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 21,
                    "name": "ElementaryTypeName",
                    "src": "421:7:0"
                  },
                  {
                    "attributes": {
                      "name": "User",
                      "referencedDeclaration": 20,
                      "type": "struct Users.User"
                    },
                    "id": 22,
                    "name": "UserDefinedTypeName",
                    "src": "432:4:0"
                  }
                ],
                "id": 23,
                "name": "Mapping",
                "src": "413:24:0"
              }
            ],
            "id": 24,
            "name": "VariableDeclaration",
            "src": "413:40:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "4ef8ba10",
              "mutability": "mutable",
              "name": "allUsersById",
              "scope": 274,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct Users.User)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct Users.User)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 25,
                    "name": "ElementaryTypeName",
                    "src": "466:4:0"
                  },
                  {
                    "attributes": {
                      "name": "User",
                      "referencedDeclaration": 20,
                      "type": "struct Users.User"
                    },
                    "id": 26,
                    "name": "UserDefinedTypeName",
                    "src": "474:4:0"
                  }
                ],
                "id": 27,
                "name": "Mapping",
                "src": "458:21:0"
              }
            ],
            "id": 28,
            "name": "VariableDeclaration",
            "src": "458:41:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "e04b6f04",
              "mutability": "mutable",
              "name": "userNameExists",
              "scope": 274,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(string => bool)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(string => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 29,
                    "name": "ElementaryTypeName",
                    "src": "545:6:0"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 30,
                    "name": "ElementaryTypeName",
                    "src": "555:4:0"
                  }
                ],
                "id": 31,
                "name": "Mapping",
                "src": "537:23:0"
              }
            ],
            "id": 32,
            "name": "VariableDeclaration",
            "src": "537:45:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "55d8a914",
              "mutability": "mutable",
              "name": "userEmailExists",
              "scope": 274,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(string => bool)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(string => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 33,
                    "name": "ElementaryTypeName",
                    "src": "623:6:0"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 34,
                    "name": "ElementaryTypeName",
                    "src": "633:4:0"
                  }
                ],
                "id": 35,
                "name": "Mapping",
                "src": "615:23:0"
              }
            ],
            "id": 36,
            "name": "VariableDeclaration",
            "src": "615:46:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "02c90584",
              "mutability": "mutable",
              "name": "userAddressExists",
              "scope": 274,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 37,
                    "name": "ElementaryTypeName",
                    "src": "709:7:0"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 38,
                    "name": "ElementaryTypeName",
                    "src": "720:4:0"
                  }
                ],
                "id": 39,
                "name": "Mapping",
                "src": "701:24:0"
              }
            ],
            "id": 40,
            "name": "VariableDeclaration",
            "src": "701:49:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "e2a04b62",
              "mutability": "mutable",
              "name": "addressToName",
              "scope": 274,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => string)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => string)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 41,
                    "name": "ElementaryTypeName",
                    "src": "792:7:0"
                  },
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 42,
                    "name": "ElementaryTypeName",
                    "src": "801:6:0"
                  }
                ],
                "id": 43,
                "name": "Mapping",
                "src": "784:24:0"
              }
            ],
            "id": 44,
            "name": "VariableDeclaration",
            "src": "784:44:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "cb0e0d7d",
              "mutability": "mutable",
              "name": "addressToId",
              "scope": 274,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 45,
                    "name": "ElementaryTypeName",
                    "src": "868:7:0"
                  },
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 46,
                    "name": "ElementaryTypeName",
                    "src": "877:4:0"
                  }
                ],
                "id": 47,
                "name": "Mapping",
                "src": "860:22:0"
              }
            ],
            "id": 48,
            "name": "VariableDeclaration",
            "src": "860:40:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "08d88aad",
              "mutability": "mutable",
              "name": "nameToAddress",
              "scope": 274,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(string => address)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(string => address)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 49,
                    "name": "ElementaryTypeName",
                    "src": "938:6:0"
                  },
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 50,
                    "name": "ElementaryTypeName",
                    "src": "946:7:0"
                  }
                ],
                "id": 51,
                "name": "Mapping",
                "src": "930:24:0"
              }
            ],
            "id": 52,
            "name": "VariableDeclaration",
            "src": "930:44:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "48305c91",
              "mutability": "mutable",
              "name": "nameToUser",
              "scope": 274,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(string => struct Users.User)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(string => struct Users.User)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 53,
                    "name": "ElementaryTypeName",
                    "src": "1009:6:0"
                  },
                  {
                    "attributes": {
                      "name": "User",
                      "referencedDeclaration": 20,
                      "type": "struct Users.User"
                    },
                    "id": 54,
                    "name": "UserDefinedTypeName",
                    "src": "1017:4:0"
                  }
                ],
                "id": 55,
                "name": "Mapping",
                "src": "1001:21:0"
              }
            ],
            "id": 56,
            "name": "VariableDeclaration",
            "src": "1001:39:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "2a2d0c47",
              "mutability": "mutable",
              "name": "idToAddress",
              "scope": 274,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => address)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => address)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 57,
                    "name": "ElementaryTypeName",
                    "src": "1076:4:0"
                  },
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 58,
                    "name": "ElementaryTypeName",
                    "src": "1082:7:0"
                  }
                ],
                "id": 59,
                "name": "Mapping",
                "src": "1068:22:0"
              }
            ],
            "id": 60,
            "name": "VariableDeclaration",
            "src": "1068:41:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 274,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 61,
                "name": "ParameterList",
                "src": "1129:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 62,
                "name": "ParameterList",
                "src": "1131:0:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 63,
                "name": "Block",
                "src": "1131:49:0"
              }
            ],
            "id": 64,
            "name": "FunctionDefinition",
            "src": "1118:62:0"
          },
          {
            "attributes": {
              "functionSelector": "01dadb2b",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createUser",
              "scope": 274,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_userName",
                      "scope": 181,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 65,
                        "name": "ElementaryTypeName",
                        "src": "1228:6:0"
                      }
                    ],
                    "id": 66,
                    "name": "VariableDeclaration",
                    "src": "1228:23:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_email",
                      "scope": 181,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 67,
                        "name": "ElementaryTypeName",
                        "src": "1252:6:0"
                      }
                    ],
                    "id": 68,
                    "name": "VariableDeclaration",
                    "src": "1252:20:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_social",
                      "scope": 181,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 69,
                        "name": "ElementaryTypeName",
                        "src": "1273:6:0"
                      }
                    ],
                    "id": 70,
                    "name": "VariableDeclaration",
                    "src": "1273:21:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_repo",
                      "scope": 181,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 71,
                        "name": "ElementaryTypeName",
                        "src": "1295:6:0"
                      }
                    ],
                    "id": 72,
                    "name": "VariableDeclaration",
                    "src": "1295:19:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_bio",
                      "scope": 181,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 73,
                        "name": "ElementaryTypeName",
                        "src": "1315:6:0"
                      }
                    ],
                    "id": 74,
                    "name": "VariableDeclaration",
                    "src": "1315:18:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_avatar",
                      "scope": 181,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 75,
                        "name": "ElementaryTypeName",
                        "src": "1334:6:0"
                      }
                    ],
                    "id": 76,
                    "name": "VariableDeclaration",
                    "src": "1334:21:0"
                  }
                ],
                "id": 77,
                "name": "ParameterList",
                "src": "1227:129:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 78,
                "name": "ParameterList",
                "src": "1364:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 79,
                            "name": "Identifier",
                            "src": "1440:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 80,
                                    "name": "Identifier",
                                    "src": "1448:3:0"
                                  }
                                ],
                                "id": 81,
                                "name": "MemberAccess",
                                "src": "1448:10:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 82,
                                        "name": "ElementaryTypeName",
                                        "src": "1462:7:0"
                                      }
                                    ],
                                    "id": 83,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1462:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 84,
                                    "name": "Literal",
                                    "src": "1470:1:0"
                                  }
                                ],
                                "id": 85,
                                "name": "FunctionCall",
                                "src": "1462:10:0"
                              }
                            ],
                            "id": 86,
                            "name": "BinaryOperation",
                            "src": "1448:24:0"
                          }
                        ],
                        "id": 87,
                        "name": "FunctionCall",
                        "src": "1440:33:0"
                      }
                    ],
                    "id": 88,
                    "name": "ExpressionStatement",
                    "src": "1440:33:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3,
                              "type": "uint256",
                              "value": "userCounter"
                            },
                            "id": 89,
                            "name": "Identifier",
                            "src": "1512:11:0"
                          }
                        ],
                        "id": 90,
                        "name": "UnaryOperation",
                        "src": "1512:14:0"
                      }
                    ],
                    "id": 91,
                    "name": "ExpressionStatement",
                    "src": "1512:14:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 92,
                            "name": "Identifier",
                            "src": "1570:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 40,
                                      "type": "mapping(address => bool)",
                                      "value": "userAddressExists"
                                    },
                                    "id": 93,
                                    "name": "Identifier",
                                    "src": "1579:17:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 94,
                                        "name": "Identifier",
                                        "src": "1597:3:0"
                                      }
                                    ],
                                    "id": 95,
                                    "name": "MemberAccess",
                                    "src": "1597:10:0"
                                  }
                                ],
                                "id": 96,
                                "name": "IndexAccess",
                                "src": "1579:29:0"
                              }
                            ],
                            "id": 97,
                            "name": "UnaryOperation",
                            "src": "1578:30:0"
                          }
                        ],
                        "id": 98,
                        "name": "FunctionCall",
                        "src": "1570:39:0"
                      }
                    ],
                    "id": 99,
                    "name": "ExpressionStatement",
                    "src": "1570:39:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 100,
                            "name": "Identifier",
                            "src": "1669:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 32,
                                      "type": "mapping(string memory => bool)",
                                      "value": "userNameExists"
                                    },
                                    "id": 101,
                                    "name": "Identifier",
                                    "src": "1678:14:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 66,
                                      "type": "string memory",
                                      "value": "_userName"
                                    },
                                    "id": 102,
                                    "name": "Identifier",
                                    "src": "1693:9:0"
                                  }
                                ],
                                "id": 103,
                                "name": "IndexAccess",
                                "src": "1678:25:0"
                              }
                            ],
                            "id": 104,
                            "name": "UnaryOperation",
                            "src": "1677:26:0"
                          }
                        ],
                        "id": 105,
                        "name": "FunctionCall",
                        "src": "1669:35:0"
                      }
                    ],
                    "id": 106,
                    "name": "ExpressionStatement",
                    "src": "1669:35:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 107,
                            "name": "Identifier",
                            "src": "1762:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 36,
                                      "type": "mapping(string memory => bool)",
                                      "value": "userEmailExists"
                                    },
                                    "id": 108,
                                    "name": "Identifier",
                                    "src": "1771:15:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 68,
                                      "type": "string memory",
                                      "value": "_email"
                                    },
                                    "id": 109,
                                    "name": "Identifier",
                                    "src": "1787:6:0"
                                  }
                                ],
                                "id": 110,
                                "name": "IndexAccess",
                                "src": "1771:23:0"
                              }
                            ],
                            "id": 111,
                            "name": "UnaryOperation",
                            "src": "1770:24:0"
                          }
                        ],
                        "id": 112,
                        "name": "FunctionCall",
                        "src": "1762:33:0"
                      }
                    ],
                    "id": 113,
                    "name": "ExpressionStatement",
                    "src": "1762:33:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "mapping(string memory => bool)",
                                  "value": "userNameExists"
                                },
                                "id": 114,
                                "name": "Identifier",
                                "src": "1841:14:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 66,
                                  "type": "string memory",
                                  "value": "_userName"
                                },
                                "id": 115,
                                "name": "Identifier",
                                "src": "1856:9:0"
                              }
                            ],
                            "id": 116,
                            "name": "IndexAccess",
                            "src": "1841:25:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 117,
                            "name": "Literal",
                            "src": "1867:4:0"
                          }
                        ],
                        "id": 118,
                        "name": "Assignment",
                        "src": "1841:30:0"
                      }
                    ],
                    "id": 119,
                    "name": "ExpressionStatement",
                    "src": "1841:30:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 40,
                                  "type": "mapping(address => bool)",
                                  "value": "userAddressExists"
                                },
                                "id": 120,
                                "name": "Identifier",
                                "src": "1920:17:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 121,
                                    "name": "Identifier",
                                    "src": "1938:3:0"
                                  }
                                ],
                                "id": 122,
                                "name": "MemberAccess",
                                "src": "1938:10:0"
                              }
                            ],
                            "id": 123,
                            "name": "IndexAccess",
                            "src": "1920:29:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 124,
                            "name": "Literal",
                            "src": "1950:4:0"
                          }
                        ],
                        "id": 125,
                        "name": "Assignment",
                        "src": "1920:34:0"
                      }
                    ],
                    "id": 126,
                    "name": "ExpressionStatement",
                    "src": "1920:34:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 36,
                                  "type": "mapping(string memory => bool)",
                                  "value": "userEmailExists"
                                },
                                "id": 127,
                                "name": "Identifier",
                                "src": "1997:15:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 68,
                                  "type": "string memory",
                                  "value": "_email"
                                },
                                "id": 128,
                                "name": "Identifier",
                                "src": "2013:6:0"
                              }
                            ],
                            "id": 129,
                            "name": "IndexAccess",
                            "src": "1997:23:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 130,
                            "name": "Literal",
                            "src": "2021:4:0"
                          }
                        ],
                        "id": 131,
                        "name": "Assignment",
                        "src": "1997:28:0"
                      }
                    ],
                    "id": 132,
                    "name": "ExpressionStatement",
                    "src": "1997:28:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        134
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "newUser",
                          "scope": 180,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct Users.User",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "User",
                              "referencedDeclaration": 20,
                              "type": "struct Users.User"
                            },
                            "id": 133,
                            "name": "UserDefinedTypeName",
                            "src": "2089:4:0"
                          }
                        ],
                        "id": 134,
                        "name": "VariableDeclaration",
                        "src": "2089:19:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "struct Users.User memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 20,
                              "type": "type(struct Users.User storage pointer)",
                              "value": "User"
                            },
                            "id": 135,
                            "name": "Identifier",
                            "src": "2109:4:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3,
                              "type": "uint256",
                              "value": "userCounter"
                            },
                            "id": 136,
                            "name": "Identifier",
                            "src": "2121:11:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 66,
                              "type": "string memory",
                              "value": "_userName"
                            },
                            "id": 137,
                            "name": "Identifier",
                            "src": "2140:9:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 68,
                              "type": "string memory",
                              "value": "_email"
                            },
                            "id": 138,
                            "name": "Identifier",
                            "src": "2157:6:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 70,
                              "type": "string memory",
                              "value": "_social"
                            },
                            "id": 139,
                            "name": "Identifier",
                            "src": "2171:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 72,
                              "type": "string memory",
                              "value": "_repo"
                            },
                            "id": 140,
                            "name": "Identifier",
                            "src": "2186:5:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 74,
                              "type": "string memory",
                              "value": "_bio"
                            },
                            "id": 141,
                            "name": "Identifier",
                            "src": "2199:4:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 76,
                              "type": "string memory",
                              "value": "_avatar"
                            },
                            "id": 142,
                            "name": "Identifier",
                            "src": "2211:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 143,
                                "name": "Identifier",
                                "src": "2226:3:0"
                              }
                            ],
                            "id": 144,
                            "name": "MemberAccess",
                            "src": "2226:10:0"
                          }
                        ],
                        "id": 145,
                        "name": "FunctionCall",
                        "src": "2109:134:0"
                      }
                    ],
                    "id": 146,
                    "name": "VariableDeclarationStatement",
                    "src": "2089:154:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Users.User storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct Users.User storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24,
                                  "type": "mapping(address => struct Users.User storage ref)",
                                  "value": "allUsers"
                                },
                                "id": 147,
                                "name": "Identifier",
                                "src": "2309:8:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 148,
                                    "name": "Identifier",
                                    "src": "2318:3:0"
                                  }
                                ],
                                "id": 149,
                                "name": "MemberAccess",
                                "src": "2318:10:0"
                              }
                            ],
                            "id": 150,
                            "name": "IndexAccess",
                            "src": "2309:20:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 134,
                              "type": "struct Users.User memory",
                              "value": "newUser"
                            },
                            "id": 151,
                            "name": "Identifier",
                            "src": "2332:7:0"
                          }
                        ],
                        "id": 152,
                        "name": "Assignment",
                        "src": "2309:30:0"
                      }
                    ],
                    "id": 153,
                    "name": "ExpressionStatement",
                    "src": "2309:30:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Users.User storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct Users.User storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 28,
                                  "type": "mapping(uint256 => struct Users.User storage ref)",
                                  "value": "allUsersById"
                                },
                                "id": 154,
                                "name": "Identifier",
                                "src": "2346:12:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3,
                                  "type": "uint256",
                                  "value": "userCounter"
                                },
                                "id": 155,
                                "name": "Identifier",
                                "src": "2359:11:0"
                              }
                            ],
                            "id": 156,
                            "name": "IndexAccess",
                            "src": "2346:25:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 134,
                              "type": "struct Users.User memory",
                              "value": "newUser"
                            },
                            "id": 157,
                            "name": "Identifier",
                            "src": "2373:7:0"
                          }
                        ],
                        "id": 158,
                        "name": "Assignment",
                        "src": "2346:34:0"
                      }
                    ],
                    "id": 159,
                    "name": "ExpressionStatement",
                    "src": "2346:34:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Users.User storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct Users.User storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "mapping(string memory => struct Users.User storage ref)",
                                  "value": "nameToUser"
                                },
                                "id": 160,
                                "name": "Identifier",
                                "src": "2387:10:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 66,
                                  "type": "string memory",
                                  "value": "_userName"
                                },
                                "id": 161,
                                "name": "Identifier",
                                "src": "2398:9:0"
                              }
                            ],
                            "id": 162,
                            "name": "IndexAccess",
                            "src": "2387:21:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 134,
                              "type": "struct Users.User memory",
                              "value": "newUser"
                            },
                            "id": 163,
                            "name": "Identifier",
                            "src": "2409:7:0"
                          }
                        ],
                        "id": 164,
                        "name": "Assignment",
                        "src": "2387:29:0"
                      }
                    ],
                    "id": 165,
                    "name": "ExpressionStatement",
                    "src": "2387:29:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 60,
                                  "type": "mapping(uint256 => address)",
                                  "value": "idToAddress"
                                },
                                "id": 166,
                                "name": "Identifier",
                                "src": "2423:11:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3,
                                  "type": "uint256",
                                  "value": "userCounter"
                                },
                                "id": 167,
                                "name": "Identifier",
                                "src": "2435:11:0"
                              }
                            ],
                            "id": 168,
                            "name": "IndexAccess",
                            "src": "2423:24:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 169,
                                "name": "Identifier",
                                "src": "2448:3:0"
                              }
                            ],
                            "id": 170,
                            "name": "MemberAccess",
                            "src": "2448:10:0"
                          }
                        ],
                        "id": 171,
                        "name": "Assignment",
                        "src": "2423:35:0"
                      }
                    ],
                    "id": 172,
                    "name": "ExpressionStatement",
                    "src": "2423:35:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 52,
                                  "type": "mapping(string memory => address)",
                                  "value": "nameToAddress"
                                },
                                "id": 173,
                                "name": "Identifier",
                                "src": "2465:13:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 66,
                                  "type": "string memory",
                                  "value": "_userName"
                                },
                                "id": 174,
                                "name": "Identifier",
                                "src": "2479:9:0"
                              }
                            ],
                            "id": 175,
                            "name": "IndexAccess",
                            "src": "2465:24:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 176,
                                "name": "Identifier",
                                "src": "2490:3:0"
                              }
                            ],
                            "id": 177,
                            "name": "MemberAccess",
                            "src": "2490:10:0"
                          }
                        ],
                        "id": 178,
                        "name": "Assignment",
                        "src": "2465:35:0"
                      }
                    ],
                    "id": 179,
                    "name": "ExpressionStatement",
                    "src": "2465:35:0"
                  }
                ],
                "id": 180,
                "name": "Block",
                "src": "1364:1144:0"
              }
            ],
            "id": 181,
            "name": "FunctionDefinition",
            "src": "1208:1300:0"
          },
          {
            "attributes": {
              "functionSelector": "ad44e42c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "updateUser",
              "scope": 274,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_userName",
                      "scope": 273,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 182,
                        "name": "ElementaryTypeName",
                        "src": "2551:6:0"
                      }
                    ],
                    "id": 183,
                    "name": "VariableDeclaration",
                    "src": "2551:23:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_oldemail",
                      "scope": 273,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 184,
                        "name": "ElementaryTypeName",
                        "src": "2575:6:0"
                      }
                    ],
                    "id": 185,
                    "name": "VariableDeclaration",
                    "src": "2575:23:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_email",
                      "scope": 273,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 186,
                        "name": "ElementaryTypeName",
                        "src": "2599:6:0"
                      }
                    ],
                    "id": 187,
                    "name": "VariableDeclaration",
                    "src": "2599:20:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_social",
                      "scope": 273,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 188,
                        "name": "ElementaryTypeName",
                        "src": "2620:6:0"
                      }
                    ],
                    "id": 189,
                    "name": "VariableDeclaration",
                    "src": "2620:21:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_repo",
                      "scope": 273,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 190,
                        "name": "ElementaryTypeName",
                        "src": "2642:6:0"
                      }
                    ],
                    "id": 191,
                    "name": "VariableDeclaration",
                    "src": "2642:19:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_bio",
                      "scope": 273,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 192,
                        "name": "ElementaryTypeName",
                        "src": "2662:6:0"
                      }
                    ],
                    "id": 193,
                    "name": "VariableDeclaration",
                    "src": "2662:18:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_avatar",
                      "scope": 273,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 194,
                        "name": "ElementaryTypeName",
                        "src": "2681:6:0"
                      }
                    ],
                    "id": 195,
                    "name": "VariableDeclaration",
                    "src": "2681:21:0"
                  }
                ],
                "id": 196,
                "name": "ParameterList",
                "src": "2550:153:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 197,
                "name": "ParameterList",
                "src": "2711:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 198,
                            "name": "Identifier",
                            "src": "2786:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 199,
                                    "name": "Identifier",
                                    "src": "2794:3:0"
                                  }
                                ],
                                "id": 200,
                                "name": "MemberAccess",
                                "src": "2794:10:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 201,
                                        "name": "ElementaryTypeName",
                                        "src": "2808:7:0"
                                      }
                                    ],
                                    "id": 202,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2808:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 203,
                                    "name": "Literal",
                                    "src": "2816:1:0"
                                  }
                                ],
                                "id": 204,
                                "name": "FunctionCall",
                                "src": "2808:10:0"
                              }
                            ],
                            "id": 205,
                            "name": "BinaryOperation",
                            "src": "2794:24:0"
                          }
                        ],
                        "id": 206,
                        "name": "FunctionCall",
                        "src": "2786:33:0"
                      }
                    ],
                    "id": 207,
                    "name": "ExpressionStatement",
                    "src": "2786:33:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 208,
                            "name": "Identifier",
                            "src": "2854:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 40,
                                  "type": "mapping(address => bool)",
                                  "value": "userAddressExists"
                                },
                                "id": 209,
                                "name": "Identifier",
                                "src": "2862:17:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 210,
                                    "name": "Identifier",
                                    "src": "2880:3:0"
                                  }
                                ],
                                "id": 211,
                                "name": "MemberAccess",
                                "src": "2880:10:0"
                              }
                            ],
                            "id": 212,
                            "name": "IndexAccess",
                            "src": "2862:29:0"
                          }
                        ],
                        "id": 213,
                        "name": "FunctionCall",
                        "src": "2854:38:0"
                      }
                    ],
                    "id": 214,
                    "name": "ExpressionStatement",
                    "src": "2854:38:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 36,
                                  "type": "mapping(string memory => bool)",
                                  "value": "userEmailExists"
                                },
                                "id": 215,
                                "name": "Identifier",
                                "src": "3748:15:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 185,
                                  "type": "string memory",
                                  "value": "_oldemail"
                                },
                                "id": 216,
                                "name": "Identifier",
                                "src": "3764:9:0"
                              }
                            ],
                            "id": 217,
                            "name": "IndexAccess",
                            "src": "3748:26:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 218,
                            "name": "Literal",
                            "src": "3775:5:0"
                          }
                        ],
                        "id": 219,
                        "name": "Assignment",
                        "src": "3748:32:0"
                      }
                    ],
                    "id": 220,
                    "name": "ExpressionStatement",
                    "src": "3748:32:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "mapping(string memory => bool)",
                                  "value": "userNameExists"
                                },
                                "id": 221,
                                "name": "Identifier",
                                "src": "3787:14:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 183,
                                  "type": "string memory",
                                  "value": "_userName"
                                },
                                "id": 222,
                                "name": "Identifier",
                                "src": "3802:9:0"
                              }
                            ],
                            "id": 223,
                            "name": "IndexAccess",
                            "src": "3787:25:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 224,
                            "name": "Literal",
                            "src": "3813:4:0"
                          }
                        ],
                        "id": 225,
                        "name": "Assignment",
                        "src": "3787:30:0"
                      }
                    ],
                    "id": 226,
                    "name": "ExpressionStatement",
                    "src": "3787:30:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 36,
                                  "type": "mapping(string memory => bool)",
                                  "value": "userEmailExists"
                                },
                                "id": 227,
                                "name": "Identifier",
                                "src": "3860:15:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 187,
                                  "type": "string memory",
                                  "value": "_email"
                                },
                                "id": 228,
                                "name": "Identifier",
                                "src": "3876:6:0"
                              }
                            ],
                            "id": 229,
                            "name": "IndexAccess",
                            "src": "3860:23:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 230,
                            "name": "Literal",
                            "src": "3884:4:0"
                          }
                        ],
                        "id": 231,
                        "name": "Assignment",
                        "src": "3860:28:0"
                      }
                    ],
                    "id": 232,
                    "name": "ExpressionStatement",
                    "src": "3860:28:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        234
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "newUser",
                          "scope": 272,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct Users.User",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "User",
                              "referencedDeclaration": 20,
                              "type": "struct Users.User"
                            },
                            "id": 233,
                            "name": "UserDefinedTypeName",
                            "src": "3952:4:0"
                          }
                        ],
                        "id": 234,
                        "name": "VariableDeclaration",
                        "src": "3952:19:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "struct Users.User memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 20,
                              "type": "type(struct Users.User storage pointer)",
                              "value": "User"
                            },
                            "id": 235,
                            "name": "Identifier",
                            "src": "3972:4:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 48,
                                  "type": "mapping(address => uint256)",
                                  "value": "addressToId"
                                },
                                "id": 236,
                                "name": "Identifier",
                                "src": "3984:11:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 237,
                                    "name": "Identifier",
                                    "src": "3996:3:0"
                                  }
                                ],
                                "id": 238,
                                "name": "MemberAccess",
                                "src": "3996:10:0"
                              }
                            ],
                            "id": 239,
                            "name": "IndexAccess",
                            "src": "3984:23:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 183,
                              "type": "string memory",
                              "value": "_userName"
                            },
                            "id": 240,
                            "name": "Identifier",
                            "src": "4015:9:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 187,
                              "type": "string memory",
                              "value": "_email"
                            },
                            "id": 241,
                            "name": "Identifier",
                            "src": "4032:6:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 189,
                              "type": "string memory",
                              "value": "_social"
                            },
                            "id": 242,
                            "name": "Identifier",
                            "src": "4046:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 191,
                              "type": "string memory",
                              "value": "_repo"
                            },
                            "id": 243,
                            "name": "Identifier",
                            "src": "4061:5:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 193,
                              "type": "string memory",
                              "value": "_bio"
                            },
                            "id": 244,
                            "name": "Identifier",
                            "src": "4074:4:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 195,
                              "type": "string memory",
                              "value": "_avatar"
                            },
                            "id": 245,
                            "name": "Identifier",
                            "src": "4086:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 246,
                                "name": "Identifier",
                                "src": "4101:3:0"
                              }
                            ],
                            "id": 247,
                            "name": "MemberAccess",
                            "src": "4101:10:0"
                          }
                        ],
                        "id": 248,
                        "name": "FunctionCall",
                        "src": "3972:146:0"
                      }
                    ],
                    "id": 249,
                    "name": "VariableDeclarationStatement",
                    "src": "3952:166:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Users.User storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct Users.User storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24,
                                  "type": "mapping(address => struct Users.User storage ref)",
                                  "value": "allUsers"
                                },
                                "id": 250,
                                "name": "Identifier",
                                "src": "4185:8:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 251,
                                    "name": "Identifier",
                                    "src": "4194:3:0"
                                  }
                                ],
                                "id": 252,
                                "name": "MemberAccess",
                                "src": "4194:10:0"
                              }
                            ],
                            "id": 253,
                            "name": "IndexAccess",
                            "src": "4185:20:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 234,
                              "type": "struct Users.User memory",
                              "value": "newUser"
                            },
                            "id": 254,
                            "name": "Identifier",
                            "src": "4208:7:0"
                          }
                        ],
                        "id": 255,
                        "name": "Assignment",
                        "src": "4185:30:0"
                      }
                    ],
                    "id": 256,
                    "name": "ExpressionStatement",
                    "src": "4185:30:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Users.User storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct Users.User storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 28,
                                  "type": "mapping(uint256 => struct Users.User storage ref)",
                                  "value": "allUsersById"
                                },
                                "id": 257,
                                "name": "Identifier",
                                "src": "4229:12:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 48,
                                      "type": "mapping(address => uint256)",
                                      "value": "addressToId"
                                    },
                                    "id": 258,
                                    "name": "Identifier",
                                    "src": "4242:11:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 259,
                                        "name": "Identifier",
                                        "src": "4254:3:0"
                                      }
                                    ],
                                    "id": 260,
                                    "name": "MemberAccess",
                                    "src": "4254:10:0"
                                  }
                                ],
                                "id": 261,
                                "name": "IndexAccess",
                                "src": "4242:23:0"
                              }
                            ],
                            "id": 262,
                            "name": "IndexAccess",
                            "src": "4229:37:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 234,
                              "type": "struct Users.User memory",
                              "value": "newUser"
                            },
                            "id": 263,
                            "name": "Identifier",
                            "src": "4268:7:0"
                          }
                        ],
                        "id": 264,
                        "name": "Assignment",
                        "src": "4229:46:0"
                      }
                    ],
                    "id": 265,
                    "name": "ExpressionStatement",
                    "src": "4229:46:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct Users.User storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct Users.User storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "mapping(string memory => struct Users.User storage ref)",
                                  "value": "nameToUser"
                                },
                                "id": 266,
                                "name": "Identifier",
                                "src": "4282:10:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 183,
                                  "type": "string memory",
                                  "value": "_userName"
                                },
                                "id": 267,
                                "name": "Identifier",
                                "src": "4293:9:0"
                              }
                            ],
                            "id": 268,
                            "name": "IndexAccess",
                            "src": "4282:21:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 234,
                              "type": "struct Users.User memory",
                              "value": "newUser"
                            },
                            "id": 269,
                            "name": "Identifier",
                            "src": "4304:7:0"
                          }
                        ],
                        "id": 270,
                        "name": "Assignment",
                        "src": "4282:29:0"
                      }
                    ],
                    "id": 271,
                    "name": "ExpressionStatement",
                    "src": "4282:29:0"
                  }
                ],
                "id": 272,
                "name": "Block",
                "src": "2711:1608:0"
              }
            ],
            "id": 273,
            "name": "FunctionDefinition",
            "src": "2531:1788:0"
          }
        ],
        "id": 274,
        "name": "ContractDefinition",
        "src": "71:4256:0"
      }
    ],
    "id": 275,
    "name": "SourceUnit",
    "src": "33:4300:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xf35D1BA254FFD8516a77C4437c656067699f033a",
      "transactionHash": "0xb930fba799335443ba36c88a94257e9f1aa6d50dfab8190d6127364069c5293b"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-26T11:18:14.515Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}